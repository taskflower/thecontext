{
    "slug": "templates",
    "name": "Experiment Templates",
    "nodes": [
      {
        "slug": "gallery",
        "label": "Template Gallery",
        "order": 1,
        "tplFile": "ExperimentTemplatesStep.tsx",
        "attrs": {
          "title": "Experiment Templates",
          "templates": [
            {
              "name": "Dashboard Workspace",
              "description": "Generate a dashboard workspace with widgets",
              "configType": "workspace",
              "prompt": "Create a dashboard workspace with the following widgets: {{widgets}}. Include proper navigation and layout.",
              "systemMessage": "Generate a workspace configuration for a dashboard. Use available widgets: InfoWidget, ButtonWidget, ChartWidget. Ensure proper JSON structure.",
              "tags": ["dashboard", "workspace", "widgets"]
            },
            {
              "name": "CRUD Scenario",
              "description": "Generate CRUD operations scenario",
              "configType": "scenario",
              "prompt": "Create a {{entity}} management scenario with create, read, update, delete operations.",
              "systemMessage": "Generate scenario configuration with proper CRUD steps. Use FormStep for create/edit, ListStep for read operations.",
              "tags": ["crud", "scenario", "management"]
            },
            {
              "name": "Form Component",
              "description": "Generate form step component",
              "configType": "step",
              "prompt": "Create a form for {{entity}} with fields: {{fields}}. Include validation and proper styling.",
              "systemMessage": "Generate a React component for form step. Use provided schema structure and styling guidelines.",
              "tags": ["form", "component", "step"]
            },
            {
              "name": "Data Widget",
              "description": "Generate data display widget",
              "configType": "widget",
              "prompt": "Create a widget to display {{dataType}} with {{displayStyle}} layout.",
              "systemMessage": "Generate a React widget component. Follow existing widget patterns and styling.",
              "tags": ["widget", "data", "display"]
            }
          ]
        }
      }
    ]
  }