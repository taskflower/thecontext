import React, { useState } from 'react';
import { FlowStepProps } from 'template-registry-module';
import { useAppStore } from '@/lib/store';

const CustomFlowStepTemplate = ({
  node,
  onSubmit,
  onPrevious,
  isLastNode
}) => {
  const [userInput, setUserInput] = useState('');
  const [currentStep, setCurrentStep] = useState(0);
  
  // Use the app store for template processing
  const processTemplate = useAppStore(state => state.processTemplate);

  // Process any variables in the assistant message
  const processedMessage = node.assistantMessage ? processTemplate(node.assistantMessage) : '';

  const handleSubmit = () => {
    if (!userInput.trim()) return;
    onSubmit(userInput);
    setUserInput('');
    // Move to next step
    setCurrentStep(prevStep => prevStep + 1);
  };

  // Helper function to determine which dot to show as active
  const getDotClassName = (dotIndex) => {
    return `h-2 w-2 rounded-full ${currentStep === dotIndex ? 'bg-blue-500' : 'bg-gray-300'}`;
  };

  return (
    <div className="max-w-md mx-auto bg-white rounded-lg overflow-hidden shadow-lg p-6">
      {/* Logo header */}
      <div className="text-center mb-6">
        <h1 className="text-xl font-bold tracking-wider">WISE.ADS</h1>
      </div>
      
      {/* Main content */}
      <div className="space-y-6">
        <div>
          <h2 className="text-xl font-bold mb-1">
            Przeprowadzimy Cię przez Twoją <br />
            <span className="text-black">pierwszą kampanię</span>
          </h2>
          
          {/* Step indication */}
          <p className="text-sm font-medium mb-4">Krok {currentStep + 1}: {processedMessage}</p>
          
          {/* Input field */}
          <div className="mb-4">
            <input
              type="text"
              value={userInput}
              onChange={(e) => setUserInput(e.target.value)}
              className="w-full p-3 border border-gray-300 rounded-md bg-gray-50 text-sm"
              placeholder="www.twojafrima.pl"
            />
          </div>
          
          {/* Action button */}
          <button
            onClick={handleSubmit}
            disabled={!userInput.trim()}
            className="w-full py-3 bg-black text-white rounded-md font-medium disabled:bg-gray-400"
          >
            {currentStep === 0 ? 'Analizuj' : isLastNode ? 'Zakończ' : 'Kontynuuj'}
          </button>
          
          {/* AI indicator */}
          <div className="flex items-center justify-center mt-4 mb-6">
            <div className="flex items-center justify-center w-8 h-8 bg-black rounded">
              <span className="text-white text-xs font-bold">AI</span>
            </div>
          </div>
          
          {/* Info text */}
          <p className="text-xs text-center text-gray-600">
            {currentStep === 0 
              ? "Wygeneruję teraz dla Ciebie kolejne kroki budowania kampanii" 
              : currentStep === 1 
                ? "Sugeruję że pracujesz w branży Budownictwo." 
                : "Zaprojektujemy dla Ciebie ofertę"}
          </p>
        </div>
        
        {/* Progress indicator dots */}
        <div className="flex justify-center space-x-2 mt-8">
          <div className={getDotClassName(0)}></div>
          <div className={getDotClassName(1)}></div>
          <div className={getDotClassName(2)}></div>
          <div className={getDotClassName(3)}></div>
          <div className={getDotClassName(4)}></div>
        </div>
      </div>
    </div>
  );
};

export default CustomFlowStepTemplate;